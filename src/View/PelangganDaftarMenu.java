/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ConnectionDB;
import Controller.ControllerKelolaMenu;
import Controller.ControllerKelolaPesanan;
import Model.DaftarMenuManagerTableModel;
import Model.DaftarMenuData;
import Model.DaftarMenuPelangganTableModel;
import Model.DaftarPesananData;
import Model.TagihanData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper;

/**
 *
 * @author dilaaaaaaa
 */
public class PelangganDaftarMenu extends javax.swing.JDialog {
    private ControllerKelolaMenu db = new ControllerKelolaMenu();
    private List<DaftarMenuData> menu = new ArrayList<>();
    private DaftarMenuPelangganTableModel makananTableModel;
    private DaftarMenuPelangganTableModel minumanTableModel;
    private DaftarMenuPelangganTableModel dessertTableModel;
    private List<TagihanData> tagihan=new ArrayList<>();
    private List<DaftarPesananData> pesanan;
    private ControllerKelolaPesanan dbPesan = new ControllerKelolaPesanan();
    private int tot=0;
    /**
     * Creates new form DaftarMenu
     */
    public PelangganDaftarMenu(java.awt.Frame parent, boolean modal) throws SQLException, ClassNotFoundException {
        super(parent, modal);
        
        // ---- tabel menu makanan -------------
        menu = db.tampilDaftarMenu("makanan");
        makananTableModel = new DaftarMenuPelangganTableModel(menu);
        makananTableModel.setMenuList(menu);
        makananTableModel.fireTableDataChanged();
        
        // ---- tabel menu minuman -------------
        menu = db.tampilDaftarMenu("minuman");
        minumanTableModel = new DaftarMenuPelangganTableModel(menu);
        minumanTableModel.setMenuList(menu);
        minumanTableModel.fireTableDataChanged();
        
        // ---- tabel menu dessert -------------
        menu = db.tampilDaftarMenu("dessert");
        dessertTableModel = new DaftarMenuPelangganTableModel(menu);
        dessertTableModel.setMenuList(menu);
        dessertTableModel.fireTableDataChanged();
        
        initComponents();
    }
    
    public PelangganDaftarMenu(java.awt.Dialog parent, boolean modal) throws SQLException, ClassNotFoundException {
        super(parent, modal);
        
        // ---- tabel menu makanan -------------
        menu = db.tampilDaftarMenu("makanan");
        makananTableModel = new DaftarMenuPelangganTableModel(menu);
        makananTableModel.setMenuList(menu);
        makananTableModel.fireTableDataChanged();
        
        // ---- tabel menu minuman -------------
        menu = db.tampilDaftarMenu("minuman");
        minumanTableModel = new DaftarMenuPelangganTableModel(menu);
        minumanTableModel.setMenuList(menu);
        minumanTableModel.fireTableDataChanged();
        
        // ---- tabel menu dessert -------------
        menu = db.tampilDaftarMenu("dessert");
        dessertTableModel = new DaftarMenuPelangganTableModel(menu);
        dessertTableModel.setMenuList(menu);
        dessertTableModel.fireTableDataChanged();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelJudul = new javax.swing.JPanel();
        labelDaftarMenu = new javax.swing.JLabel();
        paneTab = new javax.swing.JTabbedPane();
        tabMakanan = new javax.swing.JScrollPane();
        tabelMakanan = new javax.swing.JTable();
        tabMinuman = new javax.swing.JScrollPane();
        tabelMinuman = new javax.swing.JTable();
        tabDessert = new javax.swing.JScrollPane();
        tabelDessert = new javax.swing.JTable();
        buttonOrder = new javax.swing.JButton();
        buttonTambahJumlah = new javax.swing.JButton();
        buttonKurangJumlah = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuHome = new javax.swing.JMenu();
        menuTagihan = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Override");

        panelJudul.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        panelJudul.setLayout(new java.awt.GridBagLayout());

        labelDaftarMenu.setFont(new java.awt.Font("Drift Wood", 0, 36)); // NOI18N
        labelDaftarMenu.setText("DAFTAR MENU");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 90, 3, 101);
        panelJudul.add(labelDaftarMenu, gridBagConstraints);

        tabelMakanan.setModel(makananTableModel       );
        tabMakanan.setViewportView(tabelMakanan);

        paneTab.addTab("Makanan", tabMakanan);

        tabelMinuman.setModel(minumanTableModel);
        tabMinuman.setViewportView(tabelMinuman);

        paneTab.addTab("Minuman", tabMinuman);

        tabelDessert.setModel(dessertTableModel
        );
        tabDessert.setViewportView(tabelDessert);

        paneTab.addTab("Dessert", tabDessert);

        buttonOrder.setText("Pesan");
        buttonOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOrderActionPerformed(evt);
            }
        });

        buttonTambahJumlah.setText("+");
        buttonTambahJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahJumlahActionPerformed(evt);
            }
        });

        buttonKurangJumlah.setText("-");
        buttonKurangJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKurangJumlahActionPerformed(evt);
            }
        });

        menuHome.setText("Menu Utama");
        menuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuHomeMouseClicked(evt);
            }
        });
        menuBar.add(menuHome);

        menuTagihan.setText("Tagihan");
        menuTagihan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTagihanMouseClicked(evt);
            }
        });
        menuBar.add(menuTagihan);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(buttonTambahJumlah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonKurangJumlah)
                        .addGap(314, 314, 314)
                        .addComponent(buttonOrder))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paneTab, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(panelJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(paneTab, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOrder)
                    .addComponent(buttonTambahJumlah)
                    .addComponent(buttonKurangJumlah))
                .addGap(47, 47, 47))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOrderActionPerformed
        List<DaftarPesananData> daftar = new ArrayList<>();
        DaftarPesananData menu;
        
        // mengambil data untuk makanan yang dipesan
        int row = tabelMakanan.getRowCount();
        for (int j = 0; j  < row; j++) {
            if ( (int) tabelMakanan.getValueAt(j, 2) != 0 ) {
                menu =  new DaftarPesananData();
                menu.setKodeMakanan((String) tabelMakanan.getValueAt(j, 0));
                menu.setJumlahPesanan((int) tabelMakanan.getValueAt(j, 2));
                daftar.add(menu);
            }
        }
        
        // mengambil data untuk minuman yang dipesan
        int row1 = tabelMinuman.getRowCount();
        for (int j = 0; j  < row1; j++) {
            if ( (int) tabelMinuman.getValueAt(j, 2) != 0 ) {
                menu =  new DaftarPesananData();
                menu.setKodeMakanan((String) tabelMinuman.getValueAt(j, 0));
                menu.setJumlahPesanan((int) tabelMinuman.getValueAt(j, 2));
                daftar.add(menu);
            }
        }
        
        // mengambil data untuk dessert yang dipesan
        int row2 = tabelDessert.getRowCount();
        for (int j = 0; j  < row2; j++) {
            if ( (int) tabelDessert.getValueAt(j, 2) != 0 ) {
                menu =  new DaftarPesananData();
                menu.setKodeMakanan((String) tabelDessert.getValueAt(j, 0));
                menu.setJumlahPesanan((int) tabelDessert.getValueAt(j, 2));
                daftar.add(menu);
            }
        }
        
        PelangganDaftarPesanan daftarOrder = new PelangganDaftarPesanan(this, true, daftar);
        this.dispose();
        daftarOrder.setVisible(true);
    }//GEN-LAST:event_buttonOrderActionPerformed

    private void menuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuHomeMouseClicked
        this.dispose();
        new PelangganTampilanUtama().setVisible(true);
    }//GEN-LAST:event_menuHomeMouseClicked

    private void menuTagihanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTagihanMouseClicked
        PelangganTagihan daftarTagihan;
            try {
                int id = dbPesan.getIdPesanan();
                int status = dbPesan.getStatusPesanan(id);
                if ( status == 1 ) {
                    tagihan = new ArrayList<>();
                    daftarTagihan = new PelangganTagihan(this, true,tagihan, 1);
                    this.dispose();
                    daftarTagihan.setVisible(true);
                }
                else {
                    tagihan = dbPesan.tampilTagihan(id);
                    daftarTagihan = new PelangganTagihan(this, true,tagihan, id);
                    this.dispose();
                    daftarTagihan.setVisible(true);
                }    
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(PelangganTampilanUtama.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_menuTagihanMouseClicked

    private void buttonTambahJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahJumlahActionPerformed
        // menambah jumlah menu yang dipesan pada tabel makanan
        if(tabMakanan.isVisible()){
            if ( tabelMakanan.getSelectedRow() >= 0 ) {    
                int row = tabelMakanan.getSelectedRow();
                DaftarMenuData mkn = makananTableModel.getMenuList().get(row);
                if(mkn.getStatus().equals("tersedia")){
                    int jumlah = mkn.getJumlah();
                    if( jumlah == 0 ){
                        tot=1;
                    }
                    else if(jumlah != 0){
                        tot = jumlah + 1;
                    }

                    mkn.setJumlah(tot);
                    tabelMakanan.setValueAt(mkn.getJumlah(), row, 2);
                    tabelMakanan.updateUI();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Menu habis Mas !");
                }
            }
        }
        // menambah jumlah menu yang dipesan pada tabel minuman
        else if(tabMinuman.isVisible()){
            if ( tabelMinuman.getSelectedRow() >= 0 ) {                
                int row = tabelMinuman.getSelectedRow();
                DaftarMenuData mnm = minumanTableModel.getMenuList().get(row);
                if(mnm.getStatus().equals("tersedia")){
                    int jumlah = mnm.getJumlah();
                    if( jumlah == 0 ){
                        tot=1;
                    }
                    else if(jumlah != 0){
                        tot = jumlah + 1;
                    }

                    mnm.setJumlah(tot);
                    tabelMinuman.setValueAt(mnm.getJumlah(), row, 2);
                    tabelMinuman.updateUI();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Menu habis Mas !");
                }
            }        
        }
        // menambah jumlah menu yang dipesan pada tabel dessert
        else if(tabDessert.isVisible()){
            if ( tabelDessert.getSelectedRow() >= 0 ) {                                    
                int row = tabelDessert.getSelectedRow();
                DaftarMenuData dsr = dessertTableModel.getMenuList().get(row);
                if(dsr.getStatus().equals("tersedia")){
                    int jumlah = dsr.getJumlah();
                    if( jumlah == 0 ){
                        tot=1;
                    }
                    else if(jumlah != 0){
                        tot = jumlah + 1;
                    }

                    dsr.setJumlah(tot);
                    tabelDessert.setValueAt(dsr.getJumlah(), row, 2);
                    tabelDessert.updateUI();   
                }
                else{
                    JOptionPane.showMessageDialog(this, "Menu habis Mas !");
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Anda harus memilih menu terlebih dahulu");
        }
    }//GEN-LAST:event_buttonTambahJumlahActionPerformed

    private void buttonKurangJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKurangJumlahActionPerformed
        // mengurangi jumlah menu yang dipesan pada tabel makanan
        if(tabMakanan.isVisible()){
            if ( tabelMakanan.getSelectedRow() >= 0 ) {    
                int row = tabelMakanan.getSelectedRow();
                DaftarMenuData mkn = makananTableModel.getMenuList().get(row);
                int jumlah = mkn.getJumlah();
                if( jumlah == 0 ){
                    tot=0;
                }
                else if(jumlah != 0){
                    tot = jumlah - 1;
                }

                mkn.setJumlah(tot);
                tabelMakanan.setValueAt(mkn.getJumlah(), row, 2);
                tabelMakanan.updateUI();
            }
        }
        // mengurangi jumlah menu yang dipesan pada tabel minuman
        else if(tabMinuman.isVisible()){
            if ( tabelMinuman.getSelectedRow() >= 0 ) {                
                int row = tabelMinuman.getSelectedRow();
                DaftarMenuData mnm = minumanTableModel.getMenuList().get(row);
                int jumlah = mnm.getJumlah();
                if( jumlah == 0 ){
                    tot=0;
                }
                else if(jumlah != 0){
                    tot = jumlah - 1;
                }

                    mnm.setJumlah(tot);
                    tabelMinuman.setValueAt(mnm.getJumlah(), row, 2);
                    tabelMinuman.updateUI();
            }        
        }
        // mengurangi jumlah menu yang dipesan pada tabel dessert
        else if(tabDessert.isVisible()){
            if ( tabelDessert.getSelectedRow() >= 0 ) {                                    
                int row = tabelDessert.getSelectedRow();
                DaftarMenuData dsr = dessertTableModel.getMenuList().get(row);
                int jumlah = dsr.getJumlah();
                if( jumlah == 0 ){
                    tot=0;
                }
                else if(jumlah != 0){
                    tot = jumlah - 1;
                }

                    dsr.setJumlah(tot);
                    tabelDessert.setValueAt(dsr.getJumlah(), row, 2);
                    tabelDessert.updateUI();                
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Anda harus memilih menu terlebih dahulu");
        }
    }//GEN-LAST:event_buttonKurangJumlahActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try 
//        {
//            BeautyEyeLNFHelper.frameBorderStyle=BeautyEyeLNFHelper.FrameBorderStyle.osLookAndFeelDecorated;
//            org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
//        } 
//        catch (Exception e) 
//        {
//          e.printStackTrace();
//        }
//        //</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonKurangJumlah;
    private javax.swing.JButton buttonOrder;
    private javax.swing.JButton buttonTambahJumlah;
    private javax.swing.JLabel labelDaftarMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuHome;
    private javax.swing.JMenu menuTagihan;
    private javax.swing.JTabbedPane paneTab;
    private javax.swing.JPanel panelJudul;
    private javax.swing.JScrollPane tabDessert;
    private javax.swing.JScrollPane tabMakanan;
    private javax.swing.JScrollPane tabMinuman;
    private javax.swing.JTable tabelDessert;
    private javax.swing.JTable tabelMakanan;
    private javax.swing.JTable tabelMinuman;
    // End of variables declaration//GEN-END:variables
}
