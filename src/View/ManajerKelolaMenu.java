/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerKelolaMenu;
import Model.DaftarMenuManagerTableModel;
import Model.DaftarMenuData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper;

/**
 *
 * @author Syauqi Rahmat Sugara
 */
public class ManajerKelolaMenu extends javax.swing.JDialog {
    
    DaftarMenuManagerTableModel makananTableModel;
    DaftarMenuManagerTableModel minumanTabelModel;
    DaftarMenuManagerTableModel dessertTabelModel;
    List<DaftarMenuData> menu;
    ControllerKelolaMenu db = new ControllerKelolaMenu();
    /**
     * Creates new form KelolaMenu
     */
    public ManajerKelolaMenu(java.awt.Frame parent, boolean modal) throws SQLException, ClassNotFoundException {
        super(parent, modal);
        

        menu = db.tampilDaftarMenu("makanan");
        makananTableModel = new DaftarMenuManagerTableModel();
        makananTableModel.setMenuList(menu);
        makananTableModel.fireTableDataChanged();

        menu = db.tampilDaftarMenu("minuman");
        minumanTabelModel = new DaftarMenuManagerTableModel();
        minumanTabelModel.setMenuList(menu);
        minumanTabelModel.fireTableDataChanged();

        menu = db.tampilDaftarMenu("dessert");
        dessertTabelModel = new DaftarMenuManagerTableModel();
        dessertTabelModel.setMenuList(menu);
        dessertTabelModel.fireTableDataChanged();
        
        initComponents();        
    }
    
    public ManajerKelolaMenu(java.awt.Dialog parent, boolean modal) throws SQLException, ClassNotFoundException {
        super(parent, modal);
        
        menu = db.tampilDaftarMenu("makanan");
        makananTableModel = new DaftarMenuManagerTableModel();
        makananTableModel.setMenuList(menu);
        makananTableModel.fireTableDataChanged();

        menu = db.tampilDaftarMenu("minuman");
        minumanTabelModel = new DaftarMenuManagerTableModel();
        minumanTabelModel.setMenuList(menu);
        minumanTabelModel.fireTableDataChanged();

        menu = db.tampilDaftarMenu("dessert");
        dessertTabelModel = new DaftarMenuManagerTableModel();
        dessertTabelModel.setMenuList(menu);
        dessertTabelModel.fireTableDataChanged();
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabMenu = new javax.swing.JTabbedPane();
        makananScrollPane = new javax.swing.JScrollPane();
        makananTabel = new javax.swing.JTable();
        minumanScrollPane = new javax.swing.JScrollPane();
        minumanTabel = new javax.swing.JTable();
        dessertScrollPane = new javax.swing.JScrollPane();
        dessertTabel = new javax.swing.JTable();
        tambahMenuButton = new javax.swing.JButton();
        ubahMenuButton = new javax.swing.JButton();
        hapusMenuButton = new javax.swing.JButton();
        judulPanel = new javax.swing.JPanel();
        judulLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        homeMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Override");

        makananTabel.setModel(makananTableModel
        );
        makananScrollPane.setViewportView(makananTabel);

        tabMenu.addTab("Makanan", makananScrollPane);

        minumanTabel.setModel(minumanTabelModel);
        minumanScrollPane.setViewportView(minumanTabel);

        tabMenu.addTab("Minuman", minumanScrollPane);

        dessertTabel.setModel(dessertTabelModel);
        dessertScrollPane.setViewportView(dessertTabel);

        tabMenu.addTab("Dessert", dessertScrollPane);

        tambahMenuButton.setText("Tambah Menu");
        tambahMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahMenuButtonActionPerformed(evt);
            }
        });

        ubahMenuButton.setText("Ubah Menu");
        ubahMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahMenuButtonActionPerformed(evt);
            }
        });

        hapusMenuButton.setText("Hapus Menu");
        hapusMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusMenuButtonActionPerformed(evt);
            }
        });

        judulPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));

        judulLabel.setFont(new java.awt.Font("Panefresco 250wt", 0, 28)); // NOI18N
        judulLabel.setText("Pengelolaan Daftar Menu");

        javax.swing.GroupLayout judulPanelLayout = new javax.swing.GroupLayout(judulPanel);
        judulPanel.setLayout(judulPanelLayout);
        judulPanelLayout.setHorizontalGroup(
            judulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
            .addGroup(judulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(judulPanelLayout.createSequentialGroup()
                    .addGap(0, 24, Short.MAX_VALUE)
                    .addComponent(judulLabel)
                    .addGap(0, 24, Short.MAX_VALUE)))
        );
        judulPanelLayout.setVerticalGroup(
            judulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
            .addGroup(judulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(judulPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(judulLabel)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        homeMenu.setText("Home");
        homeMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMenuMouseClicked(evt);
            }
        });
        menuBar.add(homeMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tabMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tambahMenuButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ubahMenuButton)
                                .addGap(52, 52, 52)
                                .addComponent(hapusMenuButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(judulPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judulPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(tabMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahMenuButton)
                    .addComponent(ubahMenuButton)
                    .addComponent(hapusMenuButton))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(454, 450));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tambahMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahMenuButtonActionPerformed
        // TODO add your handling code here:
        ManajerTambahMenu tme=new ManajerTambahMenu(this, true);
            this.dispose();
            tme.setVisible(true);
            
    }//GEN-LAST:event_tambahMenuButtonActionPerformed

    private void ubahMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahMenuButtonActionPerformed
//        // TODO add your handling code here:
        
        try {
            ManajerUbahMenu ume = new ManajerUbahMenu(this, true);
            if ( makananTabel.getSelectedRow() >= 0 ) {                
                
                this.dispose();
                DaftarMenuData mkn = makananTableModel.getMenuList().get(makananTabel.getSelectedRow());
              
                ume.kodeMenuText.setText(""+mkn.getKode());
                ume.namaMenuText.setText(""+mkn.getNama());
                ume.hargaMenuText.setText(""+mkn.getHarga());
                ume.setVisible(true);
            }
            else if ( minumanTabel.getSelectedRow() >= 0 ) {                
                ume = new ManajerUbahMenu(this, true);
                this.dispose();
                DaftarMenuData mkn = minumanTabelModel.getMenuList().get(minumanTabel.getSelectedRow());
                    
                ume.kodeMenuText.setText(""+mkn.getKode());
                ume.namaMenuText.setText(""+mkn.getNama());
                ume.hargaMenuText.setText(""+mkn.getHarga());
                ume.setVisible(true);
            }
            else if ( dessertTabel.getSelectedRow() >= 0 ) {                
                ume = new ManajerUbahMenu(this, true);
                this.dispose();
                DaftarMenuData mkn = dessertTabelModel.getMenuList().get(dessertTabel.getSelectedRow());
                    
                ume.kodeMenuText.setText(""+mkn.getKode());
                ume.namaMenuText.setText(""+mkn.getNama());
                ume.hargaMenuText.setText(""+mkn.getHarga());
                ume.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(this, "Pilih menu terlebih dahulu");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManajerKelolaMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManajerKelolaMenu.class.getName()).log(Level.SEVERE, null, ex);
        }                 
            
    }//GEN-LAST:event_ubahMenuButtonActionPerformed

    private void hapusMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusMenuButtonActionPerformed
    
        if ( makananScrollPane.isVisible()) {
            if ( makananTabel.getSelectedRow() >= 0 ) {
            int selectedRow = makananTabel.getSelectedRow();
            DaftarMenuData mhs = makananTableModel.getMenuList().get(selectedRow);
                try {
                    int response = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan menghapus data ini?", "Confirm",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if ( response == JOptionPane.YES_OPTION ) {
                        db.hapusDaftarMenu(mhs); // melakukan proses penghapusan di database
                        List<DaftarMenuData> mhsList = db.tampilDaftarMenu("makanan");
                        makananTableModel.setMenuList(mhsList);
                        makananTableModel.fireTableDataChanged();
                        makananScrollPane.setVisible(true);
                    }

                }
                catch ( SQLException ex ) {

                } catch (ClassNotFoundException ex) {
                     Logger.getLogger(ManajerKelolaMenu.class.getName()).log(Level.SEVERE, null, ex);
                 }
            }
            else {
                JOptionPane.showMessageDialog(this, "Harus memilih data terlebih dahulu");
            }
        }
        else if ( minumanScrollPane.isVisible() ) {
            if ( minumanTabel.getSelectedRow() >= 0 ) {
            int selectedRow = minumanTabel.getSelectedRow();
            DaftarMenuData mhs = minumanTabelModel.getMenuList().get(selectedRow);
                try {
                    int response = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan menghapus data ini?", "Confirm",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if ( response == JOptionPane.YES_OPTION ) {
                        db.hapusDaftarMenu(mhs); // melakukan proses penghapusan di database
                        List<DaftarMenuData> mhsList = db.tampilDaftarMenu("minuman");
                        minumanTabelModel.setMenuList(mhsList);
                        minumanTabelModel.fireTableDataChanged();
                        minumanScrollPane.setVisible(true);
                    }

                }
                catch ( SQLException ex ) {

                } catch (ClassNotFoundException ex) {
                     Logger.getLogger(ManajerKelolaMenu.class.getName()).log(Level.SEVERE, null, ex);
                 }
            }
            else {
                JOptionPane.showMessageDialog(this, "Harus memilih data terlebih dahulu");
            }
        }
        else if ( dessertScrollPane.isVisible() ) {
            if ( dessertTabel.getSelectedRow() >= 0 ) {
            int selectedRow = dessertTabel.getSelectedRow();
            DaftarMenuData mhs = dessertTabelModel.getMenuList().get(selectedRow);
                try {
                    int response = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan menghapus data ini?", "Confirm",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if ( response == JOptionPane.YES_OPTION ) {
                        db.hapusDaftarMenu(mhs); // melakukan proses penghapusan di database
                        List<DaftarMenuData> mhsList = db.tampilDaftarMenu("dessert");
                        dessertTabelModel.setMenuList(mhsList);
                        dessertTabelModel.fireTableDataChanged();
                        dessertScrollPane.setVisible(true);
                    }

                }
                catch ( SQLException ex ) {

                } catch (ClassNotFoundException ex) {
                     Logger.getLogger(ManajerKelolaMenu.class.getName()).log(Level.SEVERE, null, ex);
                 }
            }
            else {
                JOptionPane.showMessageDialog(this, "Harus memilih data terlebih dahulu");
            }
        } 
           
    }//GEN-LAST:event_hapusMenuButtonActionPerformed

    private void homeMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMenuMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new ManagerTampilanUtama().setVisible(true);
    }//GEN-LAST:event_homeMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane dessertScrollPane;
    private javax.swing.JTable dessertTabel;
    private javax.swing.JButton hapusMenuButton;
    private javax.swing.JMenu homeMenu;
    private javax.swing.JLabel judulLabel;
    private javax.swing.JPanel judulPanel;
    private javax.swing.JScrollPane makananScrollPane;
    private javax.swing.JTable makananTabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JScrollPane minumanScrollPane;
    private javax.swing.JTable minumanTabel;
    private javax.swing.JTabbedPane tabMenu;
    private javax.swing.JButton tambahMenuButton;
    private javax.swing.JButton ubahMenuButton;
    // End of variables declaration//GEN-END:variables
}
